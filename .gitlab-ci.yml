image: dockerhub.artifactory-phx.ecd.axway.int/library/docker:20.10.6

variables:
  PROJECT: "agents-webmethods"
  CSR_SUPPRESSION_LIST: "/tmp/csr-suppressions/amplify-central/golang-agents-common.json"

  # Fortify
  FORTIFY_PROJECT: "10808"
  FORTIFY_BUILD_ID: "agents-webmethods"
  FORTIFY_INCLUDE: "**/*.go"
  FORTIFY_EXCLUDE: "**/*_test.go"

  # Whitesource
  WS_PROJECT_ID: "agents-webmethods"
  WS_CONFIG_FILE: "whitesource.config"

  # just to be sure we don't do vendoring
  GOFLAGS: "-mod=mod"

stages:
  - test
  - sonar-preview
  - sonar-publish
  - build
  - security-scans
  - security-review

############################################################
# Section for included yaml files
############################################################
include:
  - project: "apigov/gitlabci"
    ref: master
    file: "/.gitlab-ci-sonar.yml"
  - project: "apigov/beano_cicd"
    ref: $BEANO_CICD_LATEST
    # the order of these include files is important
    file:
      - "/gitlabci/variables.yml"
      - "/gitlabci/restrictions.yml"
      - "/gitlabci/jobs.yml"
  - project: "scurity/gitlabci"
    ref: $SCURITY_V2
    file:
      - "/.gitlab-ci-fortify.yml"
      - "/.gitlab-ci-whitesource.yml"
      - "/.gitlab-ci-iriusrisk.yml"
      - "/.gitlab-ci-twistlock.yml"
      - "/.gitlab-ci-csr.yml"
  - project: "apigov/beano_cicd"
    ref: $BEANO_CICD_LATEST
    # this one MUST be after the scurity jobs in order for overrides to work correctly!
    file:
      - "/gitlabci/csrjobs.yml"

.get-latest-tag: &get-latest-tag |
  if [ $(git --version | grep -Eo '2.*') ]; then 
    export LATEST_TAG=$(git tag -l --sort="version:refname" | grep -Eo '^v?[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}(-.*)?$' | grep -ve '-rc\.[0-9]\+$' | grep -ve '-[0-9]\+$' | tail -1)
  else 
    export LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
  fi

twistlock-discovery:
  extends: .twistlock
  rules:
    - !reference [.mirror-branch-csr-rules, rules]
  before_script:
    - apk --no-cache update && apk add make
    - make docker-build-discovery 
    - export IMAGE_NAME=webmethods_discovery_agent:latest

# twistlock-traceability:
#   extends: .twistlock
  # rules:
  #   - !reference [.mirror-branch-csr-rules, rules]
#   before_script:
#     - apk --no-cache update && apk add make
#     - make docker-build-traceability 
#     - export IMAGE_NAME=webmethods_traceability_agent:latest

twistlock-discovery:on-schedule:
  extends: .twistlock
  rules:
    - !reference [.mirror-schedule-csr-rules, rules]
  dependencies: []
  before_script:
    - apk --no-cache update && apk add git
    - *get-latest-tag
    - export IMAGE_NAME=ghcr.io/axway/webmethods_discovery_agent:${LATEST_TAG}
    - docker pull ${IMAGE_NAME}

# twistlock-traceability:on-schedule:
#   extends: .twistlock
  # rules:
  #   - !reference [.mirror-schedule-csr-rules, rules]
#   dependencies: []
#   before_script:
#     - apk --no-cache update && apk add git
#     - *get-latest-tag
#     - export IMAGE_NAME=ghcr.io/axway/webmethods_traceability_agent:${LATEST_TAG}
#     - docker pull ${IMAGE_NAME}

whitesource:on-schedule:
  extends: .whitesource
  rules:
    - !reference [.mirror-schedule-csr-rules, rules]
  before_script:
    - git config --global http.sslVerify false
    - git config --global url."ssh://git@git.ecd.axway.org".insteadOf "https://git.ecd.axway.org"''
    - git fetch
    - *get-latest-tag
    - echo "Checking out ${LATEST_TAG}"
    - git checkout ${LATEST_TAG}

# overridden from csrjobs.yml because mirror repos like this one don't get merge events 
fortify:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

fetch-fortify:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

whitesource:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]
  before_script:
    - export GOWORK=off

run-csr:
  rules:
    - !reference [.mirror-branch-csr-rules, rules]

####################
# CSR - overridden from csrjobs.yml to effectively not see these jobs ever. For some reason, probably multi-level
# extends and overrides, using only-never for these csr jobs doesn't work. Had to do it like this.
####################
fetch-iriusrisk:
  rules:
    - !reference [.only-never-rule, rules]

fetch-iriusrisk:on-schedule:
  rules:
    - !reference [.only-never-rule, rules]

twistlock:
  rules:
    - !reference [.only-never-rule, rules]
  dependencies:

twistlock:on-schedule:
  rules:
    - !reference [.only-never-rule, rules]
